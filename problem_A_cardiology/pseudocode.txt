INPUT: provide rows and columns

Steps:
1. Let computer pick any random card (chosenCard)
2. (lay out the cards) created nested array given # of rows and columns
3. Given chosenCard and nested array, return the card's starting location / starting column
4. Given the starting location...    
    cycle through picking up that card's column 1st, 2nd, 3rd -- and return new location
            until location is the same twice in a row, then returning # of iterations AND location (row, column) in nested array
            EXAMPLE:x
            let finalLocations = [
                [3, 3, 2], --if card column picked up 1st, it takes max 2 iterations to end up at (3, 4)  
                [1, 6, 3],
                [3, 5, 2]
            ]
        }*/


5. take rows and columns from above as inputs and return new array with how close each is to the middle
        if card ended at (3, 2)
        middle is (3.5, 1.5) -- 7/2 and 3/2
        |3.5 - 3| + |1.5 - 2| = 0
        let closenessToMiddle = [0]

  find the index of the smallest number and that = column to be picked up -- also references the array above

  return the correct index of the array from finalLocations plus the column to be picked up*/



https://docs.google.com/spreadsheets/d/17f4zm1RZK8hdOeWA25LSJ3mK76ij1Sog6tq0CJ_dpOk/edit#gid=0

